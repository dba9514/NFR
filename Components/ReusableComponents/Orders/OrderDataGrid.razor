@using ErrorOr
@using MyApplication.Models.Orders
@using MyApplication.Components.ReusableComponents.Common.DataGrids
@using MyApplication.Utilities
@using MyApplication.Components.ReusableComponents.Common.Buttons
@using MyApplication.Services.Dialogs
@using MyApplication.Services.Orders
@inject INfrDialogService DialogService
@inject IOrdersService OrdersService

<BaseDataGrid ReadOnly="true" Downloadable="true" Class="mt-2" Title="@Title" TItem="OrderItemModel" Items="@Order.Items" Height="55vh">
    <ColumnsSection>
        
        @*ID COLUMN*@
        <PropertyColumn T="OrderItemModel" TProperty="int" Property="x => x.Id" Title="ID"/>

        @*LINE TYPE COLUMN *@
        <TemplateColumn T="OrderItemModel" Title="Line Type">
            <CellTemplate>
                @context.Item.LineType.GetDisplayName()
            </CellTemplate>
        </TemplateColumn>

        @*DETAILS COLUMN*@
        <PropertyColumn T="OrderItemModel" TProperty="string" Property="x => x.Details" Title="Details"/>
        <PropertyColumn T="OrderItemModel" TProperty="int" Property="x => x.Quantity" Title="Quantity"/>

        @*INDIVIDUAL COST COLUMN*@
        <TemplateColumn T="OrderItemModel" Title="Cost Each">
            <CellTemplate>
                @($"{context.Item.IndividualPrice.ToString("C2")}")
            </CellTemplate>
        </TemplateColumn>

        @*TOTAL COST COLUMN*@
        <TemplateColumn T="OrderItemModel" Title="Total Cost">
            <CellTemplate>
                @($"{context.Item.TotalPrice.ToString("C2")}")
            </CellTemplate>
        </TemplateColumn>

        @* Action Buttons*@
        <TemplateColumn T="OrderItemModel" Filterable="false" StickyRight="true">
            <CellTemplate>
                <MudItem Class="d-flex">
                    <EditButton OnClick="@(() => OpenUpdateOrderItemDialog(context.Item))" ToolTipText="Update Order Item" size="Size.Medium"/>
                    <DeleteButton OnClick="@(() => DeleteOrderItem(context.Item))" ToolTipText="Delete Order Item" size="Size.Medium"/>
                </MudItem>
            </CellTemplate>
        </TemplateColumn>
    </ColumnsSection>
    <Pagination>
        <MudDataGridPager T="OrderItemModel" PageSizeOptions="new []{10,20,50,100}"/>
    </Pagination>
</BaseDataGrid>

@code {

    [Parameter] public OrderModel Order { get; set; } = new();
    [Parameter] public string Title { get; set; } = "Order Line Items";
    
    private async Task OpenUpdateOrderItemDialog(OrderItemModel model)
    {
        var updatedItem = await OrdersService.OpenUpdateOrderItemDialogAsync(model.ToUpdateForm());
        if (updatedItem is null) return;
        var updatedModel = updatedItem.ToModel();
        
        var index = Order.Items.FindIndex(item => item.Id == updatedModel.Id);

        if (index != -1)
        {
            // Replace the item at the found index with the updated model
            Order.Items[index] = updatedModel;
        }


        var updatedOrder = await OrdersService.UpdateOrderAsync(Order);

        if (updatedOrder.IsError) return;
        Order = updatedOrder.Value;
    }

    private async Task DeleteOrderItem(OrderItemModel model)
    {
        var confirmed = await DialogService.OpenConfirmDialog("Delete Line Item", "Are you sure you want to delete this item?");
        if (confirmed)
        {
            Order.Items.Remove(model);
            var updatedOrder = await OrdersService.UpdateOrderAsync(Order);

            if (updatedOrder.IsError) return;
            Order = updatedOrder.Value;
        }
    }


}